<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="jdbc.properties"/>
    <!-- 1.配置数据源(数据源可换c3p0/Druid) -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--数据库驱动 -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <!--连接数据库的url -->
        <property name="url" value="${jdbc.url}"/>
        <!--连接数据库的用户名 -->
        <property name="username" value="${jdbc.username}"/>
        <!--连接数据库的密码 -->
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- 2.配置JDBC模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!-- 默认必须使用数据源 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 3. 配置目标对象，内部的方法就是切点-->
    <bean id="accountDao" class="com.hoshino.spring.tx.dao.impl.AccountDaoImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
    <bean id="accountService" class="com.hoshino.spring.tx.service.impl.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"/>
    </bean>
    <!-- 4.配置平台事务管理器，依赖于数据源 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 5.编写通知：对事务进行增强(通知),需要编写对切入点和具体执行事务细节 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!--设置事务的属性信息的-->
        <tx:attributes>
            <!-- isolation:隔离级别，默认值DEFAULT  -->
            <!-- propagation:传播行为，默认值REQUIRED -->
            <!-- timeout:超时时间，默认值-1 -->
            <!-- read-only:只读，默认值false -->
            <tx:method name="*" isolation="DEFAULT" propagation="REQUIRED" timeout="-1" read-only="false"/>
        </tx:attributes>
    </tx:advice>
    <!-- 6.配置事务的aop织入，让spring自动对目标生成代理，需要使用AspectJ的表达式 -->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.hoshino.spring.tx.service.impl.*.*(..))"/>
    </aop:config>

</beans>